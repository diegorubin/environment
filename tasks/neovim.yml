---
- name: "[Fedora] Enable Fedora Copr for NeoVim"
  become_user: root
  command: "dnf copr enable -y agriffis/neovim-nightly"
  when: ansible_distribution == 'Fedora'
  tags:
    - nvim
- name: "[Fedora] Install NeoVim from negativo"
  become_user: root
  dnf:
    name:
      - neovim
    state: latest
  when: ansible_distribution == 'Fedora'
  tags:
    - nvim
- name: "[Ubuntu] Install ppa to neovim"
  become_user: root
  apt_repository:
    repo: ppa:neovim-ppa/stable
  when: ansible_distribution == 'Ubuntu'
  tags:
    - nvim
- name: "[Ubuntu] Install neovim from ppa"
  become_user: root
  apt:
    update_cache: yes
    pkg:
      - neovim
    state: latest
  when: ansible_distribution == 'Ubuntu'
  tags:
    - nvim
- pip:
    name: neovim
    extra_args: --user
# Current NeoVim Configuration
- name: Create Current NeoVim Base
  command: "mkdir -p {{destination}}/.config/nvim-current/"
  tags:
    - nvim-current
- name: Install Plug for NeoVim Plugins
  command: "curl -fLo {{destination}}/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  tags:
    - nvim-current
- name: copy init.vim
  copy: src=config/nvim-current/init.vim dest={{destination}}/.config/nvim-current owner={{user}} mode=0664
  tags:
    - nvim-current
- name: copy coc-settings.json
  copy: src=config/nvim-current/coc-settings.json dest={{destination}}/.config/nvim-current owner={{user}} mode=0664
  tags:
    - nvim-current
- name: copy theme config
  copy: src=config/nvim-current/themes/{{theme}}.vim dest={{destination}}/.config/nvim-current/theme.vim owner={{user}} mode=0664
  tags:
    - nvim-current

# New NeoVim Configuration
- name: Check for packer installation
  stat: path=~/.local/share/nvim/site/pack/packer/start/packer.nvim
  register: packer
  tags:
    - nvim-new

- name: Install Packer for NeoVim Plugins
  command: "git clone https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim"
  when: not packer.stat.exists
  tags:
    - nvim-new

- name: Create New NeoVim Base
  command: "mkdir -p {{destination}}/.config/nvim-new/lua"
  tags:
    - nvim-new
- name: copy init.vim
  copy: src=config/nvim-new/init.vim dest={{destination}}/.config/nvim-new/init.vim owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy plugins.lua
  copy: src=config/nvim-new/lua/plugins.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy gitsigns-config.lua
  copy: src=config/nvim-new/lua/gitsigns-config.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy languages-configs.lua
  copy: src=config/nvim-new/lua/languages-configs.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy autocomplete.lua
  copy: src=config/nvim-new/lua/autocomplete.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy bufferline-config.lua
  copy: src=config/nvim-new/lua/bufferline-config.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy theme.lua
  copy: src=config/nvim-new/lua/theme.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new
- name: copy tree.lua
  copy: src=config/nvim-new/lua/tree.lua dest={{destination}}/.config/nvim-new/lua owner={{user}} mode=0664
  tags:
    - nvim-new

# Creating link for selected nvim configuration
- name: Remove old link
  command: "rm -f {{destination}}/.config/nvim"
  tags:
    - nvim-current
    - nvim-new
- name: Create Link for Current NeoVim Configuration
  command: "ln -s {{destination}}/.config/nvim-current {{destination}}/.config/nvim"
  tags:
    - nvim-current
- name: Create Link for New NeoVim Configuration
  command: "ln -s {{destination}}/.config/nvim-new {{destination}}/.config/nvim"
  tags:
    - nvim-new
