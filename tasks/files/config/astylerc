#    Configuration file for Artistic Style Automatic Formatter
#    Copyright (C) 2015  Martin Hovorka
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

################################################################################

--style=java
--indent=spaces=4
# int Foo(bool isBar) {
#    if (isBar) {
#        bar();
#        return 1;
#    } else
#        return 0;
# }

################################################################################

################################################################################

--indent-classes

# class Foo
# {
#     public:
#         Foo();
#         virtual ~Foo();
# };

################################################################################

################################################################################

--indent-switches

# switch (foo)
# {
#     case 1:
#         a += 1;
#         break;
#
#     case 2:
#     {
#         a += 2;
#         break;
#     }
# }

################################################################################

################################################################################

--indent-cases

# switch (foo)
# {
#     case 1:
#         a += 1;
#         break;
#
#     case 2:
#         {
#             a += 2;
#             break;
#         }
# }

################################################################################

################################################################################

--indent-namespaces

# namespace foospace
# {
#     class Foo
#     {
#         public:
#             Foo();
#             virtual ~Foo();
#     };
# }

################################################################################

################################################################################

--indent-preproc-block

# #ifdef _WIN32
#     #include <windows.h>
#     #ifndef NO_EXPORT
#         #define EXPORT
#     #endif
# #endif

################################################################################


################################################################################

--indent-preproc-define

# #define Is_Bar(arg,a,b) \
#     (Is_Foo((arg), (a)) \
#     || Is_Foo((arg), (b)))

################################################################################

################################################################################

--indent-col1-comments

# void Foo()
# {
#      // comment
#      if (isFoo)
#      {
#          bar();
#      }
#
# }

################################################################################


################################################################################

--min-conditional-indent=0

# if (a < b
#     || c > d)
# {
#     foo++;
# }

################################################################################

################################################################################

--max-instatement-indent=120

# fooArray[] = { red,
#                green,
#                blue };

# fooFunction(barArg1,
#             barArg2,
#             barArg3);

################################################################################

################################################################################

# --break-blocks

# isFoo = true;
#
# if (isFoo)
# {
#    bar();
# }
# else
# {
#     anotherBar();
# }
#
# isBar = false;

################################################################################

################################################################################

--pad-oper

# if (foo == 2)
# {
#     a = bar((b - c) * a, d--);
# }

################################################################################

################################################################################

--pad-header

# if (isFoo((a+2), b)) /*for, while, ...*/
# {
#     bar(a, b);
# }

################################################################################

################################################################################

--unpad-paren

# if (isFoo((a+2), b)) /* <- if ( isFoo ( ( a+2 ) , b ) ) */
# {
#     bar(a, b);
# }

################################################################################

################################################################################

# --delete-empty-lines

################################################################################

################################################################################

--align-pointer=type
--align-reference=type

# char* foo1;
# char& foo2;

################################################################################

################################################################################

--add-brackets

################################################################################

################################################################################

--convert-tabs

################################################################################

################################################################################

--max-code-length=200

################################################################################

################################################################################

--break-after-logical

# if (thisVariable1 == thatVariable1 ||
#     thisVariable2 == thatVariable2 ||
#     thisVariable3 == thatVariable3)
# {
#     bar();
# }

################################################################################

################################################################################

--mode=c

################################################################################

################################################################################

--lineend=linux

################################################################################

################################################################################

--recursive

################################################################################

################################################################################

--suffix=.fmt.bak

################################################################################

################################################################################

--preserve-date

################################################################################

################################################################################

--formatted

################################################################################

################################################################################

# --exclude=

################################################################################
